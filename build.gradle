/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
      korkVersion = "4.1.0-rc.4-springBoot2"
      fiatVersion = "1.0.0-rc.6-springBoot2"
    }
    repositories {
        jcenter()
        maven { url "https://spinnaker.bintray.com/gradle" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.netflix.spinnaker.gradle:spinnaker-dev-plugin:5.2.2'
    }
}

allprojects {
    group = "com.netflix.spinnaker.igor"
    apply plugin: 'spinnaker.base-project'
    apply plugin: 'java-library'
    apply plugin: 'groovy'

    sourceSets.main.java.srcDirs = []
    sourceSets.main.groovy.srcDirs += ["src/main/java"]

    test {
      testLogging {
        exceptionFormat = 'full'
      }
    }

    tasks.withType(JavaExec) {
      if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8188'
      }
    }


    //c&p this because NetflixOss reverts it to 1.7 and ends up getting applied last..
    project.plugins.withType(JavaBasePlugin) {
        JavaPluginConvention convention = project.convention.getPlugin(JavaPluginConvention)
        convention.sourceCompatibility = JavaVersion.VERSION_1_8
        convention.targetCompatibility = JavaVersion.VERSION_1_8
    }
}

defaultTasks 'run'
